<?xml version="1.0" encoding="utf-8"?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="internal-nlog-AspNetCore.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<target xsi:type="File" name="allfile" fileName="NLog\nlog-AspNetCore-all-${shortdate}.log"
					layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" />

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="ownFile-web" fileName="NLog\nlog-AspNetCore-own-${shortdate}.log"
					layout="${longdate}|${event-properties:item=EventId:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />

		<target name="database" xsi:type="Database">
			<connectionString>Data Source=.;Initial Catalog=LogManager;Integrated Security=True</connectionString>


			Script for creating the dbo.Log table.
			<!--
				  SET ANSI_NULLS ON
				  SET QUOTED_IDENTIFIER ON
				  CREATE TABLE [dbo].[Log] (
					  [Id] [int] IDENTITY(1,1) NOT NULL,
					  [MachineName] [nvarchar](50) NOT NULL,
					  [Logged] [datetime] NOT NULL,
					  [Level] [nvarchar](50) NOT NULL,
					  [Message] [nvarchar](max) NOT NULL,
					  [Logger] [nvarchar](250) NULL,
					  [Callsite] [nvarchar](max) NULL,
					  [Exception] [nvarchar](max) NULL,
					CONSTRAINT [PK_dbo.Log] PRIMARY KEY CLUSTERED ([Id] ASC)
					  WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
				  ) ON [PRIMARY]
		
      -->
			<commandText>
				insert into dbo.Log (
				MachineName, Logged, Level, Message,
				Logger, Callsite, Exception
				) values (
				@MachineName, @Logged, @Level, @Message,
				@Logger, @Callsite, @Exception
				);
			</commandText>

			<parameter name="@MachineName" layout="${machinename}" />
			<parameter name="@Logged" layout="${date}" />
			<parameter name="@Level" layout="${level}" />
			<parameter name="@Message" layout="${message}" />
			<parameter name="@Logger" layout="${logger}" />
			<parameter name="@Callsite" layout="${callsite}" />
			<parameter name="@Exception" layout="${exception:tostring}" />
		</target>
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<!--至少Info级别以上：写入数据库-->
		<logger name="*" minlevel="Info" writeTo="database" />


		<!--Output hosting lifetime messages to console target for faster startup detection -->

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->

		<!--写入各个文件，看自己项目需求-->
		<logger name="*" minlevel="Trace" writeTo="allfile" />
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />
		<logger name="*" minlevel="Trace" writeTo="ownFile-web" />
	</rules>
</nlog>